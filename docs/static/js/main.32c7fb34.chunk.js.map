{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","clasName","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAtBgB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OAEI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,kCAAMA,KACLO,QAAQC,IAAIR,OCPXS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAChCqB,KAAM,GACNe,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBCC,qBAAU,WAEN1B,EAASC,GACJ0B,MAAK,SAAAC,GAGEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAO1B,CAAEtB,IAECuB,EDtB2BK,CAAc5B,GAAlCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAGrB,OACA,qCACI,oBAAIN,UAAU,oCAAd,SAAqDhB,IAEnDsB,GAAW,mBAAGO,SAAS,mCAAZ,wBACZ,qBAAKb,UAAU,YAAf,SAGUH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADGA,EAAIC,aEfrBmB,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEO8C,EAAWtB,KAAK,SAAAT,GAAQ,OAErB,aADA,CACC,EAAD,CAEEA,SAAWA,GADLA,Y,MCpB9BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.32c7fb34.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) =>{\n\n        e.preventDefault();\n        \n        if( inputValue.trim().length > 2){\n\n            setCategories( cats => [ inputValue, ...cats]);\n            setInputValue('');\n\n        }\n\n    }\n    return (\n        \n        <form onSubmit={ handleSubmit } > \n            < input \n              type=\"text\"\n              value={inputValue}\n              onChange={ handleInputChange }\n            />\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=XpSaeBGzaOtSWZNvkQCjo0Pbdq2rZO7D`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n    \n   \n\n    return (\n\n        <div className=\"animate__animated card animate__fadeIn\">\n           <img src= { url } alt= { title } />\n           <p> { title }</p>\n           {console.log(title)}\n           \n        </div>\n\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n   \n\n    return (\n    <>\n        <h3 className=\"animate__animated animate__fadeIn\" >{ category }</h3>\n\n        { loading && <p clasName=\"animate__animated animate__flash\">Loading...</p>}\n        {<div className=\"card-grid\">\n                \n                {\n                   images.map( img => (\n                      <GifGridItem \n                      key = { img.id }\n                      { ...img }/>\n                    ))\n                }\n\n        </div>}\n    </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n   const [state, setstate] = useState({\n      data: [],\n      loading: true\n\n   });\n\n    useEffect(() => {\n        \n        getGifs( category )\n            .then(imgs => {\n      \n\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n\n            \n\n            });\n\n    }, [ category ])\n\n   return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['One punch'])\n    \n/*     const handleAdd = () =>{\n        setCategories([...categories, 'HunterXHunter']);\n    } */\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n            \n        \n\n            <ol>\n                {\n                   categories.map( category => (\n                      //<li key={ category }> { category }</li>\n                      <GifGrid \n                        key={ category }\n                        category={ category } \n                      />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}